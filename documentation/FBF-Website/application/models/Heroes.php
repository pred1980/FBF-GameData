<?php//require_once 'Zend/Db/Table/Abstract.php';class Default_Model_Heroes extends Zend_Db_Table_Abstract {    /**     * The default table name     */    protected $_name = 'heroes';    protected $_changelog = 'hero_changelog';    protected $_primary = 'ID';    protected $_db;        public function __construct()    {        $this->_db = Zend_Registry::get('db');    }        /*     * Return a Hero by Name     * Optional: Array->Returns the specific informations     */    public function getHeroByName($name, $values = '*')    {        $query = $this->_db->select()            ->from(array('h' => $this->_name), $values)            ->where('h.name = ?', $name)            ->where('h.enabled = ?', 1);                $query = $this->_getRecommendItems($query);        return $this->getAdapter()->fetchAll($query);    }        /*     * Return a Hero by friendly Name     * Optional: Array->Returns the specific informations     */    public function getHeroByFriendlyName($name, $values = '*')    {        $query = $this->_db->select()            ->from(array('h' => $this->_name), $values)            ->where('h.fname = ?', $name)            ->where('h.enabled = ?', 1);                    $query = $this->_getRecommendItems($query);        return $this->getAdapter()->fetchAll($query);    }        /*     * Return a Hero by ID     */    public function getHeroDataById($id)     {        $query = $this->_db->select()            ->from(array('h' => $this->_name))            ->where('h.id = ?', $id)            ->where('h.enabled = ?', 1)            ->order('h.ID');                return $this->getAdapter()->fetchAll($query);    }        /*     * Return all Heroes by affilation ( forsaken or coalition )     *      */    public function getHeroByAffilation($affilation, $values = '*', $order = 'ID')    {        $query = $this->_db->select()            ->from(array('h' => $this->_name), $values)            ->where('h.affilation = ?', $affilation)            ->where('h.enabled = ?', 1)            ->order($order);        return $this->getAdapter()->fetchAll($query);    }        /*     * Return Hero Id     */    public function getHeroId($heroName) {        $query = $this->_db->select()            ->from($this->_name, 'ID')            ->where('name = ?', $heroName);                    return $this->getAdapter()->fetchAll($query);    }        /*     * Return complete changelog from a hero     */    public function getHeroChangelog($heroId) {        $query = $this->_db->select()            ->from($this->_changelog)            ->where('hero_id = ?', $heroId);                    return $this->getAdapter()->fetchAll($query);    }        /**     *      * Enter description here ...     * @param Zend_Db_Select $select     */    protected function _getRecommendItems($select)    {            //select erweitern            $select->joinLeft(array('hxi' => 'heroes_x_items'), 'h.ID = hxi.heroId', array())                   ->joinLeft(array('i' => 'items'), 'hxi.itemId = i.ID', array('item_ids'  => new Zend_Db_Expr('Group_Concat(i.ID)')))                   ->group('h.ID');            return $select;    }}